import 'dart:convert';
import 'dart:io';
import 'package:ai_image/class/api_key.dart';
import 'package:flutter/services.dart';
import 'package:gallery_saver/gallery_saver.dart';
import 'package:http/http.dart' as http;
import 'package:path_provider/path_provider.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:share_plus/share_plus.dart';

class Api {
  static final headers = {
    "Content-Type": "application/json",
    "Authorization": "Bearer $apikey"
  };

  static Future<String?> generateImage(String text) async {
    final url = Uri.parse("https://api.openai.com/v1/images/generations");
    var res = await http.post(url,
        headers: headers,
        body: jsonEncode({"prompt": text, "n": 1, "size": "256x256"}));

    print('Response status code: ${res.statusCode}');
    print('Response body: ${res.body}');

    if (res.statusCode == 200) {
      var data = jsonDecode(res.body.toString());
      return data['data'][0]['url'].toString();
    } else {
      print('Failed to fetch image');
      return null; // Add this line to handle the failure gracefully
    }
  }

  static Future<void> downloadImage(String imageUrl) async {
    // Check and request permission
    var status = await Permission.storage.request();
    if (status != PermissionStatus.granted) {
      // Handle the case where the user denies permission
      print('Permission denied');
      return;
    }

    final response = await http.get(Uri.parse(imageUrl));

    if (response.statusCode == 200) {
      final Uint8List imageData = response.bodyBytes;
      await saveImage(imageData);
    } else {
      print('Failed to download image');
      // Handle the failure accordingly
    }
  }

  static Future<void> saveImage(Uint8List imageData) async {
    final directory = await getExternalStorageDirectory();
    final timeStamp = DateTime.now().millisecondsSinceEpoch;
    final file = File('${directory!.path}/generated_image_$timeStamp.png');

    await file.writeAsBytes(imageData);

    // Save the image to the gallery
    await GallerySaver.saveImage(file.path, albumName: "AiImages");
    print('Image saved to: ${file.path}');
  }

  static Future<void> shareImage(String imageUrl) async {
    final response = await http.get(Uri.parse(imageUrl));

    if (response.statusCode == 200) {
      final Uint8List imageData = response.bodyBytes;
      final directory = await getTemporaryDirectory();
      final file = File('${directory.path}/shared_image.png');

      await file.writeAsBytes(imageData);

      // Use the share package to share the image
      await Share.shareFiles(['${file.path}'],
          text: 'Generated by Waqas Asghar');
    } else {
      print('Failed to share image');
      // Handle the failure accordingly
    }
  }
}
